#cloud-config
hostname: mn00000003
power_state:
 delay: "+30"
 mode: poweroff
 message: Installation Complete!
 timeout: 30
 condition: true
groups:
  - ubuntu: [root,sys]
  - cloud-users
users:
  - name: multinode
    gecos: multinode
    primary_group: multinode
    sudo: true
    groups: users, admin
    expiredate: 2012-09-01
    ssh_import_id: foobar
    lock_passwd: false
    ssh_authorized_keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDJdOuDWpsuq7ogEgI3kbZANMhBAOoHBsG6WQhUEkfo1lehherqZNtEWO+hZv02FQ/x1G4yN4YdM9zBpFZcgyGbP7eBjCozOy2LodjGQeZPuUmNw/fAnLNMlYTOw6u9DnrU1vZrjAuXCmn01a0LyRmsPLm5ehni6M+Z+torMSiN8fYjIurvDCwFdmm+dxkpQvb2Rfyj0lbSHY7/nWXRw6AoDDxZcpw++KbRCRjaACBgb2eqJoaJYvnZlxPD/+BvnCawqD//9J3EoN+OlBB7rOHEffRJCPA5ZdkFIxjMRjyOgVhdA3LZ3UU4NRt0ZNIZdKyZAk35diyswqFnMCPXm2HR
# write_files:
# -   encoding: b64
#     content: CiMgVGhpcyBmaWxlIGNvbnRyb2xzIHRoZSBzdGF0ZSBvZiBTRUxpbnV4...
#     owner: root:root
#     path: /etc/sysconfig/selinux
#     permissions: '0644'
# -   content: |
#         # My new /etc/sysconfig/samba file

#         SMBDOPTIONS="-D"
#     path: /etc/sysconfig/samba
# -   content: !!binary |
#         f0VMRgIBAQAAAAAAAAAAAAIAPgABAAAAwARAAAAAAABAAAAAAAAAAJAVAAAAAAAAAAAAAEAAOAAI
#         AEAAHgAdAAYAAAAFAAAAQAAAAAAAAABAAEAAAAAAAEAAQAAAAAAAwAEAAAAAAADAAQAAAAAAAAgA
#         AAAAAAAAAwAAAAQAAAAAAgAAAAAAAAACQAAAAAAAAAJAAAAAAAAcAAAAAAAAABwAAAAAAAAAAQAA
#         ....
#     path: /bin/arch
#     permissions: '0555'
# -   encoding: gzip
#     content: !!binary |
#         H4sIAIDb/U8C/1NW1E/KzNMvzuBKTc7IV8hIzcnJVyjPL8pJ4QIA6N+MVxsAAAA=
#     path: /usr/bin/hello
#     permissions: '0755'

package_update: true
package_upgrade: true
packages:
  - docker.io
  - docker-compose

runcmd:
  - ["docker run -d --name portainer --restart=on-failure -p 9000:9000 -v /var/run/docker.sock:/var/run/docker.sock --restart on-failure portainer/portainer --logo 'https://raw.githubusercontent.com/multinodeio/files/master/mn-portainer-logo.png' --templates https://raw.githubusercontent.com/multinodeio/files/master/templates.json --admin-password '$2y$05$65FBj8ILqYCOsJ.X.xZo1ufoemxMDXnk/xDW4ZBnU1VawImKvadGO'"]
  - ["docker run -d --name ctop --restart=always -v /var/run/docker.sock:/var/run/docker.sock quay.io/vektorlab/ctop:latest"]
final_message: "The system is installed after $UPTIME seconds. Rebooting..."

















































rancher:
  password: multinode
  system_docker:
    selinux_enabled: true
  docker:
    selinux_enabled: true
  autologin: tty0
  console: debian
  services:
    ctop:
      name: ctop
      image: quay.io/vektorlab/ctop:latest
      restart: always
      tty: true
      volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    portainer:
      # docker run -d --name portainer --restart=on-failure -p 9000:9000 -v /var/run/docker.sock:/var/run/docker.sock --restart on-failure portainer/portainer --logo "https://raw.githubusercontent.com/multinodeio/files/master/mn-portainer-logo.png" --templates https://raw.githubusercontent.com/multinodeio/files/master/templates.json --admin-password '$2y$05$65FBj8ILqYCOsJ.X.xZo1ufoemxMDXnk/xDW4ZBnU1VawImKvadGO'
      name: portainer
      image: portainer/portainer
      privileged: true
      restart: always
      tty: true
      volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/local/portainer:/root/data
      command: -d /root/data --logo "https://multinode.io/s/mn-portainer-logo.png" --templates "https://raw.githubusercontent.com/multinodeio/files/master/templates.json" --admin-password "$2y$05$65FBj8ILqYCOsJ.X.xZo1ufoemxMDXnk/xDW4ZBnU1VawImKvadGO"
      ports: 
      - 9000:9000
    # tor: # docker run --name tor -it -p 8118:8118 -p 9050:9050 -d -v /var/local/tor/etc:/etc -v /var/local/tor/var/lib/tor:/var/lib/tor -e TORUSER=root dperson/torproxy -b 100
    #   name: tor
    #   image: dperson/torproxy
    #   privileged: false
    #   restart: always
    #   tty: true
    #   command: -b 100
    #   ports:
    #   - 8118:8188
    #   - 9050:9050
    # rancher: # sudo docker run -d --restart=unless-stopped -p 80:80 -p 443:443 rancher/rancher: latest
    #   name: rancher
    #   image: rancher/rancher:latest
    #   restart: always
    #   ports:
    #   - 80:80
    #   - 443:443